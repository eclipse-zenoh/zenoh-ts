/* Linear theme - sequential layout, no complex positioning or grids */
:root {
  --theme-name: "Linear";
  
  /* Override layout variables for linear display */
  --layout-entity-display: block;
  --layout-entity-header-display: block;
  --layout-entity-header-direction: column;
  --layout-entity-header-justify: flex-start;
  --layout-entity-header-align: flex-start;
  --layout-options-display: block;
  --layout-options-columns: none;
  --layout-actions-display: block;
  --layout-actions-direction: column;
  --layout-actions-gap: var(--compact-margin);
  --layout-checkbox-display: block;
  --layout-checkbox-direction: column;
  --layout-checkbox-align: flex-start;
  --layout-theme-selector-display: block;
  --layout-theme-selector-direction: column;
  --layout-theme-selector-align: flex-start;
  
  /* JSON syntax highlighting - no colors in linear theme */
  --json-key-color: inherit;
  --json-string-color: inherit;
  --json-number-color: inherit;
  --json-boolean-color: inherit;
  --json-null-color: inherit;
  --json-bracket-color: inherit;
  
  /* Log type colors - no colors in linear theme */
  --log-info-color: inherit;
  --log-success-color: inherit;
  --log-error-color: inherit;
  --log-data-color: inherit;
  --log-warning-color: inherit;
  --log-neutral-color: inherit;
  
  /* Log background - transparent in linear theme */
  --log-background: transparent;
}

/* ===== FORM ELEMENTS ===== */
.compact-input,
.compact-select,
input.compact,
select.compact,
textarea.compact {
  border: var(--compact-border-width) solid #000;
  background: none;
  margin-bottom: var(--compact-margin);
  display: block;
  width: 100%;
}

.compact-input:disabled,
.compact-select:disabled,
input.compact:disabled,
select.compact:disabled,
textarea.compact:disabled {
  border: var(--compact-border-width) solid #ccc;
}

.compact-input:focus,
.compact-select:focus,
input.compact:focus,
select.compact:focus,
textarea.compact:focus {
  border: var(--compact-border-width-thick) solid #000;
}

/* ===== BUTTONS ===== */
.compact-button,
button.compact,
input[type="button"].compact,
input[type="submit"].compact,
input[type="reset"].compact {
  border: var(--compact-border-width) solid #000;
  background: none;
  display: block;
  width: 100%;
  margin-bottom: var(--compact-margin);
}

.compact-button:hover,
button.compact:hover {
  border: var(--compact-border-width-thick) solid #000;
}

.compact-button:active,
button.compact:active {
  border: var(--compact-border-width-thick) solid #333;
}

.compact-button:disabled,
button.compact:disabled {
  border: var(--compact-border-width) solid #ccc;
}

/* ===== COMPONENT OVERRIDES FOR LINEAR LAYOUT ===== */

/* Entity component - linear layout */
.entity-header {
  position: static !important;
}

.header-actions {
  position: static !important;
  transform: none !important;
  margin-top: var(--compact-margin);
}

.options-grid {
  display: block !important;
  grid-template-columns: none !important;
}

.options-grid > * {
  margin-bottom: var(--compact-margin);
}

/* Checkbox components - linear layout */
.express-control {
  display: block !important;
  align-items: stretch !important;
  height: auto !important;
  min-height: auto !important;
}

.express-state-label {
  margin-top: var(--compact-margin);
  text-align: left !important;
}

.compact-input[type="checkbox"] {
  align-self: auto !important;
  margin-bottom: var(--compact-margin);
}

/* Theme selector - linear layout */
.theme-selector {
  align-items: stretch !important;
}

.theme-selector label {
  margin-bottom: var(--compact-margin);
}

.theme-select {
  width: 100%;
  min-width: auto !important;
}

/* General overrides for linear layout */
.option-group {
  flex-direction: column !important;
}

/* Make all flex containers into block elements for linear flow */
[style*="display: flex"] {
  display: block !important;
}

[style*="display: inline-flex"] {
  display: block !important;
}

[style*="display: grid"] {
  display: block !important;
}
