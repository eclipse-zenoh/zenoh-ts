/* Boxed theme - minimal colors with subtle component backgrounds */
:root {
  --theme-name: "Boxed";
  
  /* JSON syntax highlighting - colorful for better readability */
  --json-key-color: #059669;
  --json-string-color: #dc2626;
  --json-number-color: #2563eb;
  --json-boolean-color: #7c3aed;
  --json-null-color: #6b7280;
  --json-bracket-color: #374151;
  
  /* Log type colors - colorful for better distinction */
  --log-info-color: #2563eb;
  --log-success-color: #16a34a;
  --log-error-color: #dc2626;
  --log-data-color: #7c3aed;
  --log-warning-color: #ea580c;
  --log-neutral-color: #6b7280;
  
  /* Log background - styled background */
  --log-background: #f8f9fa;
}

/* ===== COMPONENT BACKGROUND STYLES ===== */

/* Main Layout Components */
.zenoh-container {
  background-color: rgba(219, 234, 254, 0.6); /* Light blue tint */
}

.main-panel {
  background-color: rgba(241, 245, 249, 0.7); /* Light gray-blue */
}

.entity-panel {
  background-color: rgba(229, 231, 235, 0.6); /* Light gray */
}

/* Entity Components */
.entity-group {
  background-color: rgba(203, 213, 225, 0.7); /* Medium gray */
  border-radius: 6px;
  padding: 8px;
  margin: 4px 0;
}

.entity {
  background-color: rgba(255, 255, 255, 0.8); /* More opaque white */
  border-radius: 4px;
  padding: 6px;
  margin: 3px 0;
}
.entity-header {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  justify-content: flex-start;
  gap: 8px; /* Space between title, description and actions */
}

.entity-title {
  background-color: rgba(203, 213, 225, 0.5); /* Light gray for title */
  border-radius: 2px;
  padding: 2px 4px;
  font-weight: bold;
  text-align: left;
}

.entity-descr {
  background-color: rgba(156, 163, 175, 0.4); /* Light gray for description */
  border-radius: 2px;
  padding: 1px 3px;
  font-size: 0.9em;
  font-style: italic;
}

.entity-actions {
  background-color: rgba(165, 180, 252, 0.5); /* Light indigo for actions */
  border-radius: 3px;
  padding: 3px 5px;
  margin: 2px 0;
  display: flex;
  flex-wrap: wrap; /* Allow actions to wrap to new line when needed */
  gap: 4px;
  min-width: 0; /* Allow shrinking */
  max-width: 200px; /* Force wrapping of buttons before header wraps */
  margin-left: auto; /* Push actions to the right */
}

.entity-edits {
  background-color: rgba(243, 244, 246, 0.7); /* Light gray */
  padding: 6px;
  border-radius: 4px;
  margin: 2px 0;
  display: flex;
  flex-wrap: wrap;
  gap: 6px;
  align-items: flex-start;
  justify-content: flex-start;
}

/* Make individual option-group controls flexible for horizontal layout */
.entity-edits .option-group:not(.option-group-full-width) {
  flex: 0 1 auto;
  min-width: 180px;
  max-width: 280px;
  margin: 2px;
}

/* Ensure full-width controls take the entire row */
.entity-edits .option-group.option-group-full-width {
  flex: 1 1 100%;
  width: 100%;
  margin: 2px 0;
}

/* Also ensure other full-width classes work properly */
.entity-edits .fullwidth-input-row {
  flex: 1 1 100%;
  width: 100%;
}

/* Remove the duplicate margin rules since they're handled above */

/* Apply horizontal layout to other control elements in entity-edits */
.entity-edits .theme-selector,
.entity-edits .parameter-display {
  flex: 0 1 auto;
  min-width: 150px;
  max-width: 250px;
  margin: 2px 0;
}

/* Section Components */
.section-header {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  justify-content: flex-start;
  gap: 8px; /* Space between icon, title and actions */
}

.section-icon {
  background-color: rgba(99, 102, 241, 0.2); /* Light indigo for icon */
  border-radius: 50%;
  padding: 4px;
  font-size: 1.2em;
}

.section-title {
  background-color: rgba(219, 234, 254, 0.6); /* Light blue for title */
  border-radius: 3px;
  padding: 3px 6px;
  font-weight: bold;
  font-size: 1.1em;
  text-align: left;
}

.section-actions {
  background-color: rgba(165, 180, 252, 0.5); /* Light indigo for actions */
  border-radius: 3px;
  padding: 3px 5px;
  margin: 2px 0;
  display: flex;
  flex-wrap: wrap; /* Allow actions to wrap to new line when needed */
  gap: 4px;
  align-items: center;
  min-width: 0; /* Allow shrinking */
  max-width: 200px; /* Force wrapping of buttons before header wraps */
  margin-left: auto; /* Push actions to the right */
}

.section-content {
  background-color: rgba(226, 232, 240, 0.5); /* Light gray-blue */
}

.entity-info {
  background-color: rgba(187, 247, 208, 0.6); /* Light green */
  border-radius: 4px;
  padding: 6px;
  margin: 2px 0;
}

.sub-entities {
  background-color: rgba(199, 210, 254, 0.5); /* Light indigo */
  padding: 4px;
  border-radius: 3px;
}

/* Control Components */
.option-group {
  background-color: rgba(254, 240, 138, 0.6); /* Light yellow */
  border-radius: 3px;
  padding: 6px;
  margin: 2px 0;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  overflow: hidden;
}

/* Title row styling - contains label and optional checkbox */
.option-group > label:first-child {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 4px;
  font-weight: 500;
  min-height: 20px;
}

/* Control container styling */
.option-group .express-control,
.option-group .encoding-control,
.option-group .input-row,
.option-group .fullwidth-input-row {
  display: flex;
  flex-direction: column;
  width: 100%;
  box-sizing: border-box;
  margin: 0;
}

/* Make primary inputs/selects take full width */
.option-group select,
.option-group input[type="text"],
.option-group input[type="number"],
.option-group textarea {
  width: 100%;
  box-sizing: border-box;
  max-width: 100%;
}

/* Special handling for EncodingSelect with custom checkbox */
.option-group .encoding-control {
  position: relative;
}

/* Custom checkbox styling for EncodingSelect - now handled in title row */
.option-group .custom-checkbox-label {
  display: flex;
  align-items: center;
  gap: 4px;
  font-size: 0.9em;
  margin: 0;
  font-weight: normal;
}

/* For controls that have checkboxes in the control area (like TriStateCheckbox) */
.option-group .express-control {
  flex-direction: row;
  align-items: center;
  gap: 8px;
}

.option-group .express-control .compact-input {
  flex-shrink: 0;
}

.option-group .express-control .express-state-label {
  flex-grow: 1;
}

/* Special handling for inline checkboxes in title (like TimeoutInput) */
.option-group .checkbox-label.inline-checkbox {
  display: flex;
  align-items: center;
  gap: 4px;
  font-size: 0.9em;
  margin: 0;
  font-weight: normal;
}

/* Ensure input-row and fullwidth-input-row containers take full width */
.option-group .input-row,
.option-group .fullwidth-input-row {
  flex-direction: row;
  align-items: center;
  gap: 8px;
  box-sizing: border-box;
}

.option-group .input-row input,
.option-group .fullwidth-input-row input {
  flex-grow: 1;
  max-width: calc(100% - 20px); /* Account for gap and checkbox space */
  box-sizing: border-box;
}

.theme-selector {
  background-color: rgba(165, 243, 252, 0.6); /* Light cyan */
  border-radius: 4px;
  padding: 6px;
}

.parameter-display {
  background-color: rgba(196, 181, 253, 0.6); /* Light purple */
  border-radius: 3px;
  padding: 6px;
}

/* Input Components */
.express-control {
  background-color: rgba(254, 215, 170, 0.6); /* Light orange */
  border-radius: 3px;
  padding: 4px;
  box-sizing: border-box;
  width: 100%;
}

.encoding-control {
  background-color: rgba(244, 164, 245, 0.6); /* Light pink */
  border-radius: 3px;
  padding: 4px;
  box-sizing: border-box;
  width: 100%;
}

.fullwidth-input-row {
  background-color: rgba(153, 246, 228, 0.6); /* Light teal */
  border-radius: 3px;
  padding: 4px;
  box-sizing: border-box;
  width: 100%;
}

.input-row {
  background-color: rgba(253, 186, 116, 0.6); /* Light peach */
  border-radius: 3px;
  padding: 3px;
  box-sizing: border-box;
  width: 100%;
}

/* Log Panel Components */
.log-content {
  background-color: rgba(255, 255, 255, 0.7); /* Semi-transparent white */
  border-radius: 4px;
  padding: 6px;
  overflow-y: auto;
}

.log-entry {
  background-color: rgba(248, 250, 252, 0.8); /* Light gray-white */
  border-radius: 3px;
  padding: 4px 6px;
  margin: 2px 0;
  border-left: 3px solid rgba(156, 163, 175, 0.5); /* Default border */
}

.log-entry.info {
  background-color: rgba(219, 234, 254, 0.6); /* Light blue */
  border-left-color: rgba(59, 130, 246, 0.7); /* Blue border */
}

.log-entry.success {
  background-color: rgba(220, 252, 231, 0.6); /* Light green */
  border-left-color: rgba(34, 197, 94, 0.7); /* Green border */
}

.log-entry.error {
  background-color: rgba(254, 226, 226, 0.6); /* Light red */
  border-left-color: rgba(239, 68, 68, 0.7); /* Red border */
}

.log-entry.warning {
  background-color: rgba(255, 237, 213, 0.6); /* Light orange */
  border-left-color: rgba(245, 101, 101, 0.7); /* Orange border */
}

.log-entry.data {
  background-color: rgba(233, 213, 255, 0.6); /* Light purple */
  border-left-color: rgba(147, 51, 234, 0.7); /* Purple border */
}

.log-entry.neutral {
  background-color: rgba(243, 244, 246, 0.6); /* Light gray */
  border-left-color: rgba(107, 114, 128, 0.7); /* Gray border */
}

.log-message {
  background-color: rgba(255, 255, 255, 0.4); /* Very light white */
  border-radius: 2px;
  padding: 2px 4px;
}

.log-type {
  background-color: rgba(229, 231, 235, 0.6); /* Light gray badge */
  border-radius: 2px;
  padding: 1px 4px;
  font-size: 11px;
  font-weight: bold;
}

.timestamp {
  background-color: rgba(243, 244, 246, 0.5); /* Very light gray */
  border-radius: 2px;
  padding: 1px 3px;
  font-size: 10px;
}

.empty-log {
  background-color: rgba(249, 250, 251, 0.5); /* Very light gray */
  border-radius: 4px;
  padding: 20px;
  text-align: center;
  font-style: italic;
  color: rgba(107, 114, 128, 0.8);
}

/* Responsive design for better mobile/small screen experience */
@media (max-width: 768px) {
  .entity-edits .option-group:not(.option-group-full-width) {
    flex: 1 1 100%;
    min-width: auto;
    max-width: none;
    margin: 2px 0;
  }
  
  .entity-edits {
    gap: 4px;
  }
}

@media (max-width: 1200px) {
  .entity-edits .option-group:not(.option-group-full-width) {
    min-width: 160px;
    max-width: 240px;
  }
}
